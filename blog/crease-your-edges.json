{"date":"Saturday, August 3rd, 2019","title":"Crease your edges","slug":"crease-your-edges","paragraph":"Weather you're a convert or a skeptic regarding weighted edges during subdivision,\n\t\tit is hard to deny its utility in the modeling process. Here is how to use them, their benefits and a quick walk through of my approach.","html":"\n\t<br />\n\t<h4>Creased Edges Origin</h4>\n\t<p>\n\tCreased edges have actually been around since polygon modeling was popularized by Pixar when they invented subdivision technology for their short movie Geri's Game. Check out the paper on subdivisions released by Pixar here: <a target=\"_blank\" href=\"https://graphics.pixar.com/library/Geri/paper.pdf\"> Subdivision Surfaces in Character Animation: Pixar Animation Studios</a>. Pixar also introduced weighted edges in the same paper, however due to Pixar keeping that technology proprietary, creased edges never become common utility at other studios. However since then Pixar has released <a target=\"_blank\" href=\"http://graphics.pixar.com/opensubdiv/docs/intro.html\">OpenSubDiv</a> in order to standardize subdivision schemes across Computer Graphics Applications. Many applications have since picked up the new open source standard utilizing the full suite of capabilities that comes with OpenSubDiv. Maya is one of those applications and we now have the opportunity to weigh our edges, maintaining their shape during subdivision, without the need of added topology in the form of support edges.\n\t</p>\n\n\t<img src=\"https://i.imgur.com/DwYAHnl.png\" />\n\t<span class=\"footnote\">Support edges on your left. Crease edges on your right</span>\n\n\t<h4>Crease Edges vs Support Edges</h4>\n\t<p>\n\tAs with different approaches comes a couple of Pros and Cons. With support edges, you have to manage additional topology. This becomes problematic if curvature needs to be re-addressed, as it is tedious to maintain the edge consistency by maintaining proper placement of support edges. Having to manage less topology usually means higher flexibility and faster turn arounds. That problem is non present utilising edges.\n\t</p>\n\n\t<p>\n\tA con of utilizing crease edges is that it can be heavy for your computer to do a proper representation of your model as it subdivides. A rule of thumb, is that in order for your model to be represented in close proximity to the render, is to use at the minimum one subdivision higher than your highest crease value. Otherwise there is not enough topology in your mesh to represent the edge. This can cause a slight mismatch between what you see in the viewport, and how the eventual renders actually end up as. However, these adjustments can easily be addressed swiftly utilising a few set of commands I wrote for these types of workflows, easily outweighing the cons.\n\t</p>\n\n\t<h4>Working with Crease Edges</h4>\n\t<p>\n\tWhen working with creased edges your polygon model must adhere to the same base best practices as any subdivision model. Evenly spaced, grid-like, mostly quad topology. There are two main points that were popularized back at <a target=\"_blank\" href=\"https\">Industrial Light & Magic</a> when working with with creased edges:\n\t</p>\n\n\n\n\t<img src=\"https://i.imgur.com/VCDhjZY.png\" />\n\t<span class=\"footnote\">Two identical cubes with similar crease value of 3 (default value in Maya). The cube on the left is being rendered at subdivision level 2. The cube on the right is being rendered at subdivision level 5.</span>\n\n\t<p>\n\t\t1) In order to get a truthful representation of your subdivided model, you must make sure that you are subdividing your model one amount higher than your highest crease value. If you subdivide fewer, then you cannot see the proper sharpness of your edge, which leads to many newcomers to dial up crease value way too high, only to have to dial them back down during the render process. You can adjust your subdivision preview settings on a per mesh basis in the attribute editor.\n\t</p>\n\n\t<p>\n\t\t2) Only use three values on your creased edges. Stick to 1, 2 and 3. It is possible to set the crease value up to 10, but if you feel the need to go higher than three, It is recommended to up the resolution of your basemesh instead.\n\t</p>\n\n\t<h4>creasedEdges</h4>\n\t<p>\n\t\tI created a script allowing you to set specific crease values on your selected edges. As well as select edges with a specific crease value, and also clear all creasing on your selected object. Utilizing this script makes it easy to organise your edges in three degrees of sharpness. It allows you to iterate, and adjust your edges more efficiently. The script is handy if you have to pass your model to a pipeline that does not support crease edges. You can find my script over at GitHub <a target=\"_blank\" href=\"https://github.com/JakobJK/creaseEdges\">here.</a>\n\t</p>\n\n\t<img src=\"https://i.imgur.com/alEAwTb.png\">\n\t<span class=\"footnote\">A marking menu hooked up with the python script <a target=\"_blank\" href=\"https://github.com/JakobJK/creaseEdges\">creaseEdges</a></span>\n\t<h4>From Crease Edges to Support Edges</h4>\n\t<p>\n\tUtilising the maya script I wrote here, you can easily follow the best practices, and convert your model from crease edges to utilising support edges. The process also maintains your UVs, so you are free to do this step as the last part in your modeling process. Utilize the script to select your creased edges. Perform a bevel (Make sure you perform the bevel without chamfer). Except for some minor clean up work on a few corners, you are basically ready to hand in your model.\n</p>\n<img src=\"https://i.imgur.com/fc79k2h.png\" />\n<span class=\"footnote\">A simple example of a model, which would be quite complicated to insert support edges manually, without the bevel approach. There are only four corners in total, that needs to be cleaned up.</span>\n\t\t"}